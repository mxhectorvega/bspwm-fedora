#!/bin/sh

PRIMARY=$(xrandr | grep -w  primary |  awk '{print $(1)}')

#function post_run {
# fondo
#    { killall dunst ; setsid -f dunst ;} >/dev/null 2>&1 # Restart dunst to ensure proper location on screen
#}

function choose_output {

	OUTPUTS=$(xrandr | grep -w  connected ) 
	MESSAGE="Monitores conectados"

	if [ "$1" == "-a" ] ||  [ "$2" == "-a" ]
	then
		OUTPUTS=$(echo "$OUTPUTS" | grep --extended-regexp "connected\s(primary\s)?[0-9]+x[0-9]+") 
		MESSAGE="Monitores activos"
	fi

	if [ "$1" == "-p" ] ||  [ "$2" == "-p" ]
	then
		OUTPUTS=$(echo "$OUTPUTS" | grep -v -w primary) 
		MESSAGE="$MESSAGE (no primario)"
	fi

	OUTPUTS=$(echo "$OUTPUTS" | awk '{print $(1)}' | rofi -dmenu -i -p "$MESSAGE")
	echo "$OUTPUTS"
}

function change_res {

	RES=$(xrandr | awk '/'"$1"'/{f=1;next} /[A-Z]/{f=0} f' |  awk '{print $(1)}' | rofi -dmenu -i -p "Cambiar resolucion")
echo $RES
	if [ ! -z "$RES" ]
	then
		xrandr --output "$1" --mode "$RES"
		post_run
	fi
}

function disconnect {

	xrandr --output $1 --off
	CONNECTED=$(xrandr | grep --extended-regexp  "connected\s[0-9]+x[0-9]+")

	if [ -z "$CONNECTED" ]
	then
        	xrandr --output $PRIMARY --auto
	fi
	post_run

}

function mirror {

	xrandr --output "$1" --off
	RESOLUTION=$(xrandr | grep -P "(?<=connected\sprimary\s)[0-9]+x[0-9]+"|  awk '{print $(4)}')
	xrandr  --output "$1" --auto --same-as "$PRIMARY" --scale-from $RESOLUTION
	post_run
}

function single_monitor {

	xrandr --output $1 --off
	CONNECTED=$(xrandr | grep -P "connected(\sprimary)?\s[0-9]+x[0-9]+"|  awk '{print $(1)}' | head -n 1)

	while [ -n "$CONNECTED" ]
	do
		xrandr --output $CONNECTED --off 
		CONNECTED=$(xrandr | grep -P "connected(\sprimary)?\s[0-9]+x[0-9]+"|  awk '{print $(1)}' | head -n 1)
	done

	xrandr --output $1 --primary --auto
	post_run
}

function extend {

	POSITION=$(echo -e "Derecha\nIzquierda\nArriba\nAbajo" | rofi -dmenu -i -p "Posicion")
	xrandr --output "$1" --off

	case "$POSITION" in

	        "Derecha")
			xrandr --output "$PRIMARY" --primary --auto --output "$1"     --right-of "$PRIMARY" --auto
	                ;;
	        "Izquierda") 
			xrandr --output "$PRIMARY" --primary --auto --output "$1"     --left-of "$PRIMARY" --auto
	                ;;
	        "Arriba") 
			xrandr --output "$PRIMARY" --primary --auto --output "$1"     --above "$PRIMARY" --auto
	                ;;
	        "Abajo") 
			xrandr --output "$PRIMARY" --primary --auto --output "$1"     --below "$PRIMARY" --auto
	                ;;
		*) exit
			;;
	esac
# post_run
}

function rotate {

	ROTATION=$(echo -e "left\nright\nnormal\ninverted" | rofi -dmenu -i -p "Rotacion:")

	xrandr --output "$1" --rotate "$ROTATION" 
	xrandr --output "$1" --auto 
	post_run
}
 
CHOOSEN=$(echo -e "Conectar monitor\nDesconectar monitor externo\nRotar monitor\nCambiar resolution" | rofi -dmenu -i -p "Selecione una configuracion")

case "$CHOOSEN" in
	"Conectar monitor") 

		OUTPUT=$(choose_output -p)

		if [ -z "$OUTPUT" ]
		then
       			exit
		fi
		;;

	"Desconectar monitor externo")

		OUTPUT=$(choose_output -a -p)

		if [ -z "$OUTPUT" ]
		then
		        exit
		fi

		disconnect "$OUTPUT"
		exit
		;;


	"Rotar monitor") 

		OUTPUT=$(choose_output -a)

		if [ -z "$OUTPUT" ]
		then
		        exit
		fi

		rotate "$OUTPUT"
		exit
		;;
		
	"Cambiar resolution") 

		OUTPUT=$(choose_output -a)

		if [ -z "$OUTPUT" ]
		then
		        exit
		fi

		change_res "$OUTPUT"
		exit
		;;

	*) exit
		;;

esac

CHOOSEN=$(echo -e "Duplicar\nModo extendido\nMonitor unico" | rofi -dmenu -i -p "Elige un modo:")

case "$CHOOSEN" in 
	"Duplicar") mirror "$OUTPUT"
		;;

	"Modo extendido") extend "$OUTPUT"
		;;

	"Monitor unico") single_monitor "$OUTPUT"
		;;

	*) exit
		;;

esac